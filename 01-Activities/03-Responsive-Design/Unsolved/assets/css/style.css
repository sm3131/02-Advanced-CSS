* {
  box-sizing: border-box;
}

body {
  font-family: Arial;
  margin: 0;
}

header {
  padding: 40px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What happens when we set the display property to flex? 
TODO: The flex property creates a one dimensional layout where children in containers can be layed out in any direction and become flexible in their sizes to either shrink or grow and fill spaces. 
*/
nav {
  display: flex;
  background-color: #d8a47f;
}

nav a {
  color: #13293d;
  padding: 14px 20px;
  text-decoration: none;
  text-align: center;
}

/* 
What is the flex-wrap property? 
TODO: This property either allows items to flow onto multiple lines or remain on a single line
*/
main {
  display: flex;
  flex-wrap: wrap;
}

aside {
  flex: 1;
  background-color: #b9c6ae;
  padding: 80px;
  text-align: center;
}


footer {
  padding: 20px;
  text-align: center;
  background: #13293d;
  color: #fff;
}

/* 
What does the justify-content property do? 
TODO: This property determines how the space around and between items is distributed along the main flex axis
*/
.products {
  flex: 4;
  background-color: #fff;
  padding: 20px;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}

/* 
What is the flex property a shorthand property for?
What is it doing here? 
TODO: This is shorthand for flex grow, flex shrink, and flex-basis/ In this example the grow and shrink values are set to 0 and the flex-basis is set to 400px so the items won't grow or shrink to take up or compensate for space the items will only be sized big enough to fit their content and then the flex-basis value means the items will never become smaller than 400px
*/
.card {
  border-style: solid;
  border-width: 1px;
  border-radius: 10px;
  padding: 10px;
  flex: 0 0 400px;
}

.card header {
  padding: 20px;
}

.card p {
  text-align: center;
}

.card img {
  width: 100%;
}

/* 
What does the flex-direction property define?
What is it doing here? 
TODO: This determines which direction the flex items will run essentially it determines the main axis so if it is set to row the items will be lined up along the horizontal axis if it is set to column they will run along the vertical axis
*/
@media screen and (max-width: 768px) {
  main,
  nav {
    flex-direction: column;
  }
}
